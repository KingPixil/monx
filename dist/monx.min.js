/**
 * Monx v0.1.1
 * Copyright 2017-2018 Kabir Shah
 * Released under the MIT License
 * https://github.com/kbrsh/monx
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Monx=e()}(this,function(){"use strict";var t,e=function(t){var e=t.state,n=t._state,i=t.instances,o=t.map,s=function(s){Object.defineProperty(e,s,{get:function(){var e=t.target;return void 0!==e&&(o[e][s]=!0),n[s]},set:function(t){n[s]=t;for(var e=0;e<i.length;e++){var a=i[e];!0===o[a.name][s]&&a.build()}},enumerable:!0})};for(var a in n)s(a)},n=function(t,e,n,i){t[e]=void 0===n?i:n};function i(t){this.state={},n(this,"_state",t.state,{}),n(this,"actions",t.actions,{}),this.instances=[],this.map={},this.target=void 0,e(this)}return i.prototype.dispatch=function(t,e){this.actions[t](this.state,e)},i.prototype.init=function(e){var n=e.name,i=this;e.data.store=i;var o=e.render;e.render=function(){i.target=n;var t=o.apply(this,arguments);return i.target=void 0,t},e.destroy=function(){var e=i.instances;e.splice(e.indexOf(this),1),delete i.map[n],t.apply(this,arguments)},i.instances.push(e),i.map[n]={}},i.init=function(e){t=e.prototype.destroy},i});