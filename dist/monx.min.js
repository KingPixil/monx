/**
 * Monx v0.1.1
 * Copyright 2017 Kabir Shah
 * Released under the MIT License
 * https://github.com/kbrsh/monx
 */
!function(t,n){"undefined"==typeof module?t.Monx=n():module.exports=n()}(this,function(){function t(t){this.state={},e(this,"_state",t.state,{}),e(this,"actions",t.actions,{}),this.instances=[],this.map={},this.target=void 0,i(this)}var n,i=function(t){var n=t.state,i=t._state,e=t.instances,s=t.map;for(var a in i)!function(a){Object.defineProperty(n,a,{get:function(){var n=t.target;return void 0!==n&&(s[n][a]=!0),i[a]},set:function(t){i[a]=t;for(var n=0;n<e.length;n++){var o=e[n];!0===s[o.name][a]&&o.build()}}})}(a)},e=function(t,n,i,e){t[n]=void 0===i?e:i};return t.prototype.dispatch=function(t,n){this.actions[t](this.state,n)},t.prototype.init=function(t){var i=t.name,e=this;t.data.store=e;var s=t.render;t.render=function(){e.target=i;var t=s.apply(this,arguments);return e.target=void 0,t},t.destroy=function(){var t=e.instances;t.splice(t.indexOf(this),1),delete e.map[i],n.apply(this,arguments)},e.instances.push(t),e.map[i]={}},t.init=function(t){n=t.prototype.destroy},t});