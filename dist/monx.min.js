/**
 * Monx v0.1.1
 * Copyright 2017 Kabir Shah
 * Released under the MIT License
 * https://github.com/kbrsh/monx
 */
!function(t,n){"undefined"==typeof module?t.Monx=n():module.exports=n()}(this,function(){function t(t){this.state={},e(this,"_state",t.state,{}),e(this,"actions",t.actions,{}),this.instances=[],this.map={},this.target=void 0,i(this)}var n,i=function(t){var n=t.instances,i=t.map,e=t.state,s=t._state;for(var o in s)!function(o){Object.defineProperty(e,o,{get:function(){var n=t.target;return void 0!==n&&(void 0===i[n]&&(i[n]={}),i[n][o]=!0),s[o]},set:function(t){s[o]=t;for(var e=0;e<n.length;e++){var a=n[e];!0===i[a.name][o]&&a.build()}}})}(o)},e=function(t,n,i,e){t[n]=void 0===i?e:i};return t.prototype.dispatch=function(t,n){this.actions[t](this.state,n)},t.prototype.init=function(t){var i=this;t.data.store=i;var e=t.render;t.render=function(){i.target=this.name;var t=e.apply(this,arguments);return i.target=void 0,t},t.destroy=function(){var t=i.instances;t.splice(t.indexOf(this),1),n.apply(this,arguments)},this.instances.push(t)},t.init=function(t){n=t.prototype.destroy},t});